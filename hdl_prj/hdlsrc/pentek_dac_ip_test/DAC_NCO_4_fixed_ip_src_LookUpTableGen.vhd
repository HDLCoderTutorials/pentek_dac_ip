-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\pentek_dac_ip_test\DAC_NCO_4_fixed_ip_src_LookUpTableGen.vhd
-- Created: 2020-09-08 13:47:15
-- 
-- Generated by MATLAB 9.7 and HDL Coder 3.15
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: DAC_NCO_4_fixed_ip_src_LookUpTableGen
-- Source Path: pentek_dac_ip_test/DAC_NCO_4xSampling_IQ/Vector NCO/For Each Subsystem/NCO HDL Optimized4/WaveformGen/LookUpTableGen
-- Hierarchy Level: 5
-- 
-- Look Up Table Generation Component
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.DAC_NCO_4_fixed_ip_src_DAC_NCO_4xSampling_IQ_pkg.ALL;

ENTITY DAC_NCO_4_fixed_ip_src_LookUpTableGen IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        lutaddr                           :   IN    std_logic_vector(13 DOWNTO 0);  -- ufix14
        lutoutput                         :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En15
        );
END DAC_NCO_4_fixed_ip_src_LookUpTableGen;


ARCHITECTURE rtl OF DAC_NCO_4_fixed_ip_src_LookUpTableGen IS

  -- Constants
  CONSTANT Lookup_Table1_table_data       : vector_of_signed16(0 TO 1023) := 
    (to_signed(16#0000#, 16), to_signed(16#0032#, 16), to_signed(16#0065#, 16), to_signed(16#0097#, 16),
     to_signed(16#00C9#, 16), to_signed(16#00FB#, 16), to_signed(16#012E#, 16), to_signed(16#0160#, 16),
     to_signed(16#0192#, 16), to_signed(16#01C4#, 16), to_signed(16#01F7#, 16), to_signed(16#0229#, 16),
     to_signed(16#025B#, 16), to_signed(16#028D#, 16), to_signed(16#02C0#, 16), to_signed(16#02F2#, 16),
     to_signed(16#0324#, 16), to_signed(16#0356#, 16), to_signed(16#0389#, 16), to_signed(16#03BB#, 16),
     to_signed(16#03ED#, 16), to_signed(16#041F#, 16), to_signed(16#0452#, 16), to_signed(16#0484#, 16),
     to_signed(16#04B6#, 16), to_signed(16#04E8#, 16), to_signed(16#051B#, 16), to_signed(16#054D#, 16),
     to_signed(16#057F#, 16), to_signed(16#05B1#, 16), to_signed(16#05E3#, 16), to_signed(16#0616#, 16),
     to_signed(16#0648#, 16), to_signed(16#067A#, 16), to_signed(16#06AC#, 16), to_signed(16#06DE#, 16),
     to_signed(16#0711#, 16), to_signed(16#0743#, 16), to_signed(16#0775#, 16), to_signed(16#07A7#, 16),
     to_signed(16#07D9#, 16), to_signed(16#080C#, 16), to_signed(16#083E#, 16), to_signed(16#0870#, 16),
     to_signed(16#08A2#, 16), to_signed(16#08D4#, 16), to_signed(16#0906#, 16), to_signed(16#0938#, 16),
     to_signed(16#096B#, 16), to_signed(16#099D#, 16), to_signed(16#09CF#, 16), to_signed(16#0A01#, 16),
     to_signed(16#0A33#, 16), to_signed(16#0A65#, 16), to_signed(16#0A97#, 16), to_signed(16#0AC9#, 16),
     to_signed(16#0AFB#, 16), to_signed(16#0B2D#, 16), to_signed(16#0B60#, 16), to_signed(16#0B92#, 16),
     to_signed(16#0BC4#, 16), to_signed(16#0BF6#, 16), to_signed(16#0C28#, 16), to_signed(16#0C5A#, 16),
     to_signed(16#0C8C#, 16), to_signed(16#0CBE#, 16), to_signed(16#0CF0#, 16), to_signed(16#0D22#, 16),
     to_signed(16#0D54#, 16), to_signed(16#0D86#, 16), to_signed(16#0DB8#, 16), to_signed(16#0DEA#, 16),
     to_signed(16#0E1C#, 16), to_signed(16#0E4E#, 16), to_signed(16#0E80#, 16), to_signed(16#0EB2#, 16),
     to_signed(16#0EE4#, 16), to_signed(16#0F15#, 16), to_signed(16#0F47#, 16), to_signed(16#0F79#, 16),
     to_signed(16#0FAB#, 16), to_signed(16#0FDD#, 16), to_signed(16#100F#, 16), to_signed(16#1041#, 16),
     to_signed(16#1073#, 16), to_signed(16#10A4#, 16), to_signed(16#10D6#, 16), to_signed(16#1108#, 16),
     to_signed(16#113A#, 16), to_signed(16#116C#, 16), to_signed(16#119E#, 16), to_signed(16#11CF#, 16),
     to_signed(16#1201#, 16), to_signed(16#1233#, 16), to_signed(16#1265#, 16), to_signed(16#1296#, 16),
     to_signed(16#12C8#, 16), to_signed(16#12FA#, 16), to_signed(16#132B#, 16), to_signed(16#135D#, 16),
     to_signed(16#138F#, 16), to_signed(16#13C1#, 16), to_signed(16#13F2#, 16), to_signed(16#1424#, 16),
     to_signed(16#1455#, 16), to_signed(16#1487#, 16), to_signed(16#14B9#, 16), to_signed(16#14EA#, 16),
     to_signed(16#151C#, 16), to_signed(16#154D#, 16), to_signed(16#157F#, 16), to_signed(16#15B1#, 16),
     to_signed(16#15E2#, 16), to_signed(16#1614#, 16), to_signed(16#1645#, 16), to_signed(16#1677#, 16),
     to_signed(16#16A8#, 16), to_signed(16#16DA#, 16), to_signed(16#170B#, 16), to_signed(16#173C#, 16),
     to_signed(16#176E#, 16), to_signed(16#179F#, 16), to_signed(16#17D1#, 16), to_signed(16#1802#, 16),
     to_signed(16#1833#, 16), to_signed(16#1865#, 16), to_signed(16#1896#, 16), to_signed(16#18C7#, 16),
     to_signed(16#18F9#, 16), to_signed(16#192A#, 16), to_signed(16#195B#, 16), to_signed(16#198D#, 16),
     to_signed(16#19BE#, 16), to_signed(16#19EF#, 16), to_signed(16#1A20#, 16), to_signed(16#1A51#, 16),
     to_signed(16#1A83#, 16), to_signed(16#1AB4#, 16), to_signed(16#1AE5#, 16), to_signed(16#1B16#, 16),
     to_signed(16#1B47#, 16), to_signed(16#1B78#, 16), to_signed(16#1BA9#, 16), to_signed(16#1BDA#, 16),
     to_signed(16#1C0C#, 16), to_signed(16#1C3D#, 16), to_signed(16#1C6E#, 16), to_signed(16#1C9F#, 16),
     to_signed(16#1CD0#, 16), to_signed(16#1D01#, 16), to_signed(16#1D31#, 16), to_signed(16#1D62#, 16),
     to_signed(16#1D93#, 16), to_signed(16#1DC4#, 16), to_signed(16#1DF5#, 16), to_signed(16#1E26#, 16),
     to_signed(16#1E57#, 16), to_signed(16#1E88#, 16), to_signed(16#1EB8#, 16), to_signed(16#1EE9#, 16),
     to_signed(16#1F1A#, 16), to_signed(16#1F4B#, 16), to_signed(16#1F7B#, 16), to_signed(16#1FAC#, 16),
     to_signed(16#1FDD#, 16), to_signed(16#200E#, 16), to_signed(16#203E#, 16), to_signed(16#206F#, 16),
     to_signed(16#209F#, 16), to_signed(16#20D0#, 16), to_signed(16#2101#, 16), to_signed(16#2131#, 16),
     to_signed(16#2162#, 16), to_signed(16#2192#, 16), to_signed(16#21C3#, 16), to_signed(16#21F3#, 16),
     to_signed(16#2224#, 16), to_signed(16#2254#, 16), to_signed(16#2284#, 16), to_signed(16#22B5#, 16),
     to_signed(16#22E5#, 16), to_signed(16#2316#, 16), to_signed(16#2346#, 16), to_signed(16#2376#, 16),
     to_signed(16#23A7#, 16), to_signed(16#23D7#, 16), to_signed(16#2407#, 16), to_signed(16#2437#, 16),
     to_signed(16#2467#, 16), to_signed(16#2498#, 16), to_signed(16#24C8#, 16), to_signed(16#24F8#, 16),
     to_signed(16#2528#, 16), to_signed(16#2558#, 16), to_signed(16#2588#, 16), to_signed(16#25B8#, 16),
     to_signed(16#25E8#, 16), to_signed(16#2618#, 16), to_signed(16#2648#, 16), to_signed(16#2678#, 16),
     to_signed(16#26A8#, 16), to_signed(16#26D8#, 16), to_signed(16#2708#, 16), to_signed(16#2738#, 16),
     to_signed(16#2768#, 16), to_signed(16#2797#, 16), to_signed(16#27C7#, 16), to_signed(16#27F7#, 16),
     to_signed(16#2827#, 16), to_signed(16#2856#, 16), to_signed(16#2886#, 16), to_signed(16#28B6#, 16),
     to_signed(16#28E5#, 16), to_signed(16#2915#, 16), to_signed(16#2945#, 16), to_signed(16#2974#, 16),
     to_signed(16#29A4#, 16), to_signed(16#29D3#, 16), to_signed(16#2A03#, 16), to_signed(16#2A32#, 16),
     to_signed(16#2A62#, 16), to_signed(16#2A91#, 16), to_signed(16#2AC1#, 16), to_signed(16#2AF0#, 16),
     to_signed(16#2B1F#, 16), to_signed(16#2B4F#, 16), to_signed(16#2B7E#, 16), to_signed(16#2BAD#, 16),
     to_signed(16#2BDC#, 16), to_signed(16#2C0C#, 16), to_signed(16#2C3B#, 16), to_signed(16#2C6A#, 16),
     to_signed(16#2C99#, 16), to_signed(16#2CC8#, 16), to_signed(16#2CF7#, 16), to_signed(16#2D26#, 16),
     to_signed(16#2D55#, 16), to_signed(16#2D84#, 16), to_signed(16#2DB3#, 16), to_signed(16#2DE2#, 16),
     to_signed(16#2E11#, 16), to_signed(16#2E40#, 16), to_signed(16#2E6F#, 16), to_signed(16#2E9E#, 16),
     to_signed(16#2ECC#, 16), to_signed(16#2EFB#, 16), to_signed(16#2F2A#, 16), to_signed(16#2F59#, 16),
     to_signed(16#2F87#, 16), to_signed(16#2FB6#, 16), to_signed(16#2FE5#, 16), to_signed(16#3013#, 16),
     to_signed(16#3042#, 16), to_signed(16#3070#, 16), to_signed(16#309F#, 16), to_signed(16#30CD#, 16),
     to_signed(16#30FC#, 16), to_signed(16#312A#, 16), to_signed(16#3159#, 16), to_signed(16#3187#, 16),
     to_signed(16#31B5#, 16), to_signed(16#31E4#, 16), to_signed(16#3212#, 16), to_signed(16#3240#, 16),
     to_signed(16#326E#, 16), to_signed(16#329D#, 16), to_signed(16#32CB#, 16), to_signed(16#32F9#, 16),
     to_signed(16#3327#, 16), to_signed(16#3355#, 16), to_signed(16#3383#, 16), to_signed(16#33B1#, 16),
     to_signed(16#33DF#, 16), to_signed(16#340D#, 16), to_signed(16#343B#, 16), to_signed(16#3469#, 16),
     to_signed(16#3497#, 16), to_signed(16#34C4#, 16), to_signed(16#34F2#, 16), to_signed(16#3520#, 16),
     to_signed(16#354E#, 16), to_signed(16#357B#, 16), to_signed(16#35A9#, 16), to_signed(16#35D7#, 16),
     to_signed(16#3604#, 16), to_signed(16#3632#, 16), to_signed(16#365F#, 16), to_signed(16#368D#, 16),
     to_signed(16#36BA#, 16), to_signed(16#36E8#, 16), to_signed(16#3715#, 16), to_signed(16#3742#, 16),
     to_signed(16#3770#, 16), to_signed(16#379D#, 16), to_signed(16#37CA#, 16), to_signed(16#37F7#, 16),
     to_signed(16#3825#, 16), to_signed(16#3852#, 16), to_signed(16#387F#, 16), to_signed(16#38AC#, 16),
     to_signed(16#38D9#, 16), to_signed(16#3906#, 16), to_signed(16#3933#, 16), to_signed(16#3960#, 16),
     to_signed(16#398D#, 16), to_signed(16#39BA#, 16), to_signed(16#39E7#, 16), to_signed(16#3A13#, 16),
     to_signed(16#3A40#, 16), to_signed(16#3A6D#, 16), to_signed(16#3A9A#, 16), to_signed(16#3AC6#, 16),
     to_signed(16#3AF3#, 16), to_signed(16#3B20#, 16), to_signed(16#3B4C#, 16), to_signed(16#3B79#, 16),
     to_signed(16#3BA5#, 16), to_signed(16#3BD2#, 16), to_signed(16#3BFE#, 16), to_signed(16#3C2A#, 16),
     to_signed(16#3C57#, 16), to_signed(16#3C83#, 16), to_signed(16#3CAF#, 16), to_signed(16#3CDC#, 16),
     to_signed(16#3D08#, 16), to_signed(16#3D34#, 16), to_signed(16#3D60#, 16), to_signed(16#3D8C#, 16),
     to_signed(16#3DB8#, 16), to_signed(16#3DE4#, 16), to_signed(16#3E10#, 16), to_signed(16#3E3C#, 16),
     to_signed(16#3E68#, 16), to_signed(16#3E94#, 16), to_signed(16#3EC0#, 16), to_signed(16#3EEC#, 16),
     to_signed(16#3F17#, 16), to_signed(16#3F43#, 16), to_signed(16#3F6F#, 16), to_signed(16#3F9A#, 16),
     to_signed(16#3FC6#, 16), to_signed(16#3FF1#, 16), to_signed(16#401D#, 16), to_signed(16#4048#, 16),
     to_signed(16#4074#, 16), to_signed(16#409F#, 16), to_signed(16#40CB#, 16), to_signed(16#40F6#, 16),
     to_signed(16#4121#, 16), to_signed(16#414D#, 16), to_signed(16#4178#, 16), to_signed(16#41A3#, 16),
     to_signed(16#41CE#, 16), to_signed(16#41F9#, 16), to_signed(16#4224#, 16), to_signed(16#424F#, 16),
     to_signed(16#427A#, 16), to_signed(16#42A5#, 16), to_signed(16#42D0#, 16), to_signed(16#42FB#, 16),
     to_signed(16#4326#, 16), to_signed(16#4351#, 16), to_signed(16#437B#, 16), to_signed(16#43A6#, 16),
     to_signed(16#43D1#, 16), to_signed(16#43FB#, 16), to_signed(16#4426#, 16), to_signed(16#4450#, 16),
     to_signed(16#447B#, 16), to_signed(16#44A5#, 16), to_signed(16#44D0#, 16), to_signed(16#44FA#, 16),
     to_signed(16#4524#, 16), to_signed(16#454F#, 16), to_signed(16#4579#, 16), to_signed(16#45A3#, 16),
     to_signed(16#45CD#, 16), to_signed(16#45F7#, 16), to_signed(16#4621#, 16), to_signed(16#464B#, 16),
     to_signed(16#4675#, 16), to_signed(16#469F#, 16), to_signed(16#46C9#, 16), to_signed(16#46F3#, 16),
     to_signed(16#471D#, 16), to_signed(16#4747#, 16), to_signed(16#4770#, 16), to_signed(16#479A#, 16),
     to_signed(16#47C4#, 16), to_signed(16#47ED#, 16), to_signed(16#4817#, 16), to_signed(16#4840#, 16),
     to_signed(16#486A#, 16), to_signed(16#4893#, 16), to_signed(16#48BD#, 16), to_signed(16#48E6#, 16),
     to_signed(16#490F#, 16), to_signed(16#4939#, 16), to_signed(16#4962#, 16), to_signed(16#498B#, 16),
     to_signed(16#49B4#, 16), to_signed(16#49DD#, 16), to_signed(16#4A06#, 16), to_signed(16#4A2F#, 16),
     to_signed(16#4A58#, 16), to_signed(16#4A81#, 16), to_signed(16#4AAA#, 16), to_signed(16#4AD3#, 16),
     to_signed(16#4AFB#, 16), to_signed(16#4B24#, 16), to_signed(16#4B4D#, 16), to_signed(16#4B75#, 16),
     to_signed(16#4B9E#, 16), to_signed(16#4BC7#, 16), to_signed(16#4BEF#, 16), to_signed(16#4C17#, 16),
     to_signed(16#4C40#, 16), to_signed(16#4C68#, 16), to_signed(16#4C91#, 16), to_signed(16#4CB9#, 16),
     to_signed(16#4CE1#, 16), to_signed(16#4D09#, 16), to_signed(16#4D31#, 16), to_signed(16#4D59#, 16),
     to_signed(16#4D81#, 16), to_signed(16#4DA9#, 16), to_signed(16#4DD1#, 16), to_signed(16#4DF9#, 16),
     to_signed(16#4E21#, 16), to_signed(16#4E49#, 16), to_signed(16#4E71#, 16), to_signed(16#4E98#, 16),
     to_signed(16#4EC0#, 16), to_signed(16#4EE8#, 16), to_signed(16#4F0F#, 16), to_signed(16#4F37#, 16),
     to_signed(16#4F5E#, 16), to_signed(16#4F85#, 16), to_signed(16#4FAD#, 16), to_signed(16#4FD4#, 16),
     to_signed(16#4FFB#, 16), to_signed(16#5023#, 16), to_signed(16#504A#, 16), to_signed(16#5071#, 16),
     to_signed(16#5098#, 16), to_signed(16#50BF#, 16), to_signed(16#50E6#, 16), to_signed(16#510D#, 16),
     to_signed(16#5134#, 16), to_signed(16#515B#, 16), to_signed(16#5181#, 16), to_signed(16#51A8#, 16),
     to_signed(16#51CF#, 16), to_signed(16#51F5#, 16), to_signed(16#521C#, 16), to_signed(16#5243#, 16),
     to_signed(16#5269#, 16), to_signed(16#5290#, 16), to_signed(16#52B6#, 16), to_signed(16#52DC#, 16),
     to_signed(16#5303#, 16), to_signed(16#5329#, 16), to_signed(16#534F#, 16), to_signed(16#5375#, 16),
     to_signed(16#539B#, 16), to_signed(16#53C1#, 16), to_signed(16#53E7#, 16), to_signed(16#540D#, 16),
     to_signed(16#5433#, 16), to_signed(16#5459#, 16), to_signed(16#547F#, 16), to_signed(16#54A4#, 16),
     to_signed(16#54CA#, 16), to_signed(16#54F0#, 16), to_signed(16#5515#, 16), to_signed(16#553B#, 16),
     to_signed(16#5560#, 16), to_signed(16#5586#, 16), to_signed(16#55AB#, 16), to_signed(16#55D0#, 16),
     to_signed(16#55F6#, 16), to_signed(16#561B#, 16), to_signed(16#5640#, 16), to_signed(16#5665#, 16),
     to_signed(16#568A#, 16), to_signed(16#56AF#, 16), to_signed(16#56D4#, 16), to_signed(16#56F9#, 16),
     to_signed(16#571E#, 16), to_signed(16#5743#, 16), to_signed(16#5767#, 16), to_signed(16#578C#, 16),
     to_signed(16#57B1#, 16), to_signed(16#57D5#, 16), to_signed(16#57FA#, 16), to_signed(16#581E#, 16),
     to_signed(16#5843#, 16), to_signed(16#5867#, 16), to_signed(16#588C#, 16), to_signed(16#58B0#, 16),
     to_signed(16#58D4#, 16), to_signed(16#58F8#, 16), to_signed(16#591C#, 16), to_signed(16#5940#, 16),
     to_signed(16#5964#, 16), to_signed(16#5988#, 16), to_signed(16#59AC#, 16), to_signed(16#59D0#, 16),
     to_signed(16#59F4#, 16), to_signed(16#5A18#, 16), to_signed(16#5A3B#, 16), to_signed(16#5A5F#, 16),
     to_signed(16#5A82#, 16), to_signed(16#5AA6#, 16), to_signed(16#5AC9#, 16), to_signed(16#5AED#, 16),
     to_signed(16#5B10#, 16), to_signed(16#5B34#, 16), to_signed(16#5B57#, 16), to_signed(16#5B7A#, 16),
     to_signed(16#5B9D#, 16), to_signed(16#5BC0#, 16), to_signed(16#5BE3#, 16), to_signed(16#5C06#, 16),
     to_signed(16#5C29#, 16), to_signed(16#5C4C#, 16), to_signed(16#5C6F#, 16), to_signed(16#5C91#, 16),
     to_signed(16#5CB4#, 16), to_signed(16#5CD7#, 16), to_signed(16#5CF9#, 16), to_signed(16#5D1C#, 16),
     to_signed(16#5D3E#, 16), to_signed(16#5D61#, 16), to_signed(16#5D83#, 16), to_signed(16#5DA5#, 16),
     to_signed(16#5DC8#, 16), to_signed(16#5DEA#, 16), to_signed(16#5E0C#, 16), to_signed(16#5E2E#, 16),
     to_signed(16#5E50#, 16), to_signed(16#5E72#, 16), to_signed(16#5E94#, 16), to_signed(16#5EB6#, 16),
     to_signed(16#5ED7#, 16), to_signed(16#5EF9#, 16), to_signed(16#5F1B#, 16), to_signed(16#5F3C#, 16),
     to_signed(16#5F5E#, 16), to_signed(16#5F80#, 16), to_signed(16#5FA1#, 16), to_signed(16#5FC2#, 16),
     to_signed(16#5FE4#, 16), to_signed(16#6005#, 16), to_signed(16#6026#, 16), to_signed(16#6047#, 16),
     to_signed(16#6068#, 16), to_signed(16#6089#, 16), to_signed(16#60AA#, 16), to_signed(16#60CB#, 16),
     to_signed(16#60EC#, 16), to_signed(16#610D#, 16), to_signed(16#612E#, 16), to_signed(16#614E#, 16),
     to_signed(16#616F#, 16), to_signed(16#6190#, 16), to_signed(16#61B0#, 16), to_signed(16#61D1#, 16),
     to_signed(16#61F1#, 16), to_signed(16#6211#, 16), to_signed(16#6232#, 16), to_signed(16#6252#, 16),
     to_signed(16#6272#, 16), to_signed(16#6292#, 16), to_signed(16#62B2#, 16), to_signed(16#62D2#, 16),
     to_signed(16#62F2#, 16), to_signed(16#6312#, 16), to_signed(16#6332#, 16), to_signed(16#6351#, 16),
     to_signed(16#6371#, 16), to_signed(16#6391#, 16), to_signed(16#63B0#, 16), to_signed(16#63D0#, 16),
     to_signed(16#63EF#, 16), to_signed(16#640F#, 16), to_signed(16#642E#, 16), to_signed(16#644D#, 16),
     to_signed(16#646C#, 16), to_signed(16#648B#, 16), to_signed(16#64AB#, 16), to_signed(16#64CA#, 16),
     to_signed(16#64E9#, 16), to_signed(16#6507#, 16), to_signed(16#6526#, 16), to_signed(16#6545#, 16),
     to_signed(16#6564#, 16), to_signed(16#6582#, 16), to_signed(16#65A1#, 16), to_signed(16#65C0#, 16),
     to_signed(16#65DE#, 16), to_signed(16#65FC#, 16), to_signed(16#661B#, 16), to_signed(16#6639#, 16),
     to_signed(16#6657#, 16), to_signed(16#6675#, 16), to_signed(16#6693#, 16), to_signed(16#66B2#, 16),
     to_signed(16#66D0#, 16), to_signed(16#66ED#, 16), to_signed(16#670B#, 16), to_signed(16#6729#, 16),
     to_signed(16#6747#, 16), to_signed(16#6764#, 16), to_signed(16#6782#, 16), to_signed(16#67A0#, 16),
     to_signed(16#67BD#, 16), to_signed(16#67DA#, 16), to_signed(16#67F8#, 16), to_signed(16#6815#, 16),
     to_signed(16#6832#, 16), to_signed(16#6850#, 16), to_signed(16#686D#, 16), to_signed(16#688A#, 16),
     to_signed(16#68A7#, 16), to_signed(16#68C4#, 16), to_signed(16#68E0#, 16), to_signed(16#68FD#, 16),
     to_signed(16#691A#, 16), to_signed(16#6937#, 16), to_signed(16#6953#, 16), to_signed(16#6970#, 16),
     to_signed(16#698C#, 16), to_signed(16#69A9#, 16), to_signed(16#69C5#, 16), to_signed(16#69E1#, 16),
     to_signed(16#69FD#, 16), to_signed(16#6A1A#, 16), to_signed(16#6A36#, 16), to_signed(16#6A52#, 16),
     to_signed(16#6A6E#, 16), to_signed(16#6A89#, 16), to_signed(16#6AA5#, 16), to_signed(16#6AC1#, 16),
     to_signed(16#6ADD#, 16), to_signed(16#6AF8#, 16), to_signed(16#6B14#, 16), to_signed(16#6B30#, 16),
     to_signed(16#6B4B#, 16), to_signed(16#6B66#, 16), to_signed(16#6B82#, 16), to_signed(16#6B9D#, 16),
     to_signed(16#6BB8#, 16), to_signed(16#6BD3#, 16), to_signed(16#6BEE#, 16), to_signed(16#6C09#, 16),
     to_signed(16#6C24#, 16), to_signed(16#6C3F#, 16), to_signed(16#6C5A#, 16), to_signed(16#6C75#, 16),
     to_signed(16#6C8F#, 16), to_signed(16#6CAA#, 16), to_signed(16#6CC4#, 16), to_signed(16#6CDF#, 16),
     to_signed(16#6CF9#, 16), to_signed(16#6D14#, 16), to_signed(16#6D2E#, 16), to_signed(16#6D48#, 16),
     to_signed(16#6D62#, 16), to_signed(16#6D7C#, 16), to_signed(16#6D96#, 16), to_signed(16#6DB0#, 16),
     to_signed(16#6DCA#, 16), to_signed(16#6DE4#, 16), to_signed(16#6DFE#, 16), to_signed(16#6E17#, 16),
     to_signed(16#6E31#, 16), to_signed(16#6E4A#, 16), to_signed(16#6E64#, 16), to_signed(16#6E7D#, 16),
     to_signed(16#6E97#, 16), to_signed(16#6EB0#, 16), to_signed(16#6EC9#, 16), to_signed(16#6EE2#, 16),
     to_signed(16#6EFB#, 16), to_signed(16#6F14#, 16), to_signed(16#6F2D#, 16), to_signed(16#6F46#, 16),
     to_signed(16#6F5F#, 16), to_signed(16#6F78#, 16), to_signed(16#6F90#, 16), to_signed(16#6FA9#, 16),
     to_signed(16#6FC2#, 16), to_signed(16#6FDA#, 16), to_signed(16#6FF2#, 16), to_signed(16#700B#, 16),
     to_signed(16#7023#, 16), to_signed(16#703B#, 16), to_signed(16#7053#, 16), to_signed(16#706B#, 16),
     to_signed(16#7083#, 16), to_signed(16#709B#, 16), to_signed(16#70B3#, 16), to_signed(16#70CB#, 16),
     to_signed(16#70E3#, 16), to_signed(16#70FA#, 16), to_signed(16#7112#, 16), to_signed(16#712A#, 16),
     to_signed(16#7141#, 16), to_signed(16#7158#, 16), to_signed(16#7170#, 16), to_signed(16#7187#, 16),
     to_signed(16#719E#, 16), to_signed(16#71B5#, 16), to_signed(16#71CC#, 16), to_signed(16#71E3#, 16),
     to_signed(16#71FA#, 16), to_signed(16#7211#, 16), to_signed(16#7228#, 16), to_signed(16#723F#, 16),
     to_signed(16#7255#, 16), to_signed(16#726C#, 16), to_signed(16#7282#, 16), to_signed(16#7299#, 16),
     to_signed(16#72AF#, 16), to_signed(16#72C5#, 16), to_signed(16#72DC#, 16), to_signed(16#72F2#, 16),
     to_signed(16#7308#, 16), to_signed(16#731E#, 16), to_signed(16#7334#, 16), to_signed(16#734A#, 16),
     to_signed(16#735F#, 16), to_signed(16#7375#, 16), to_signed(16#738B#, 16), to_signed(16#73A0#, 16),
     to_signed(16#73B6#, 16), to_signed(16#73CB#, 16), to_signed(16#73E1#, 16), to_signed(16#73F6#, 16),
     to_signed(16#740B#, 16), to_signed(16#7421#, 16), to_signed(16#7436#, 16), to_signed(16#744B#, 16),
     to_signed(16#7460#, 16), to_signed(16#7475#, 16), to_signed(16#7489#, 16), to_signed(16#749E#, 16),
     to_signed(16#74B3#, 16), to_signed(16#74C7#, 16), to_signed(16#74DC#, 16), to_signed(16#74F0#, 16),
     to_signed(16#7505#, 16), to_signed(16#7519#, 16), to_signed(16#752D#, 16), to_signed(16#7542#, 16),
     to_signed(16#7556#, 16), to_signed(16#756A#, 16), to_signed(16#757E#, 16), to_signed(16#7592#, 16),
     to_signed(16#75A6#, 16), to_signed(16#75B9#, 16), to_signed(16#75CD#, 16), to_signed(16#75E1#, 16),
     to_signed(16#75F4#, 16), to_signed(16#7608#, 16), to_signed(16#761B#, 16), to_signed(16#762E#, 16),
     to_signed(16#7642#, 16), to_signed(16#7655#, 16), to_signed(16#7668#, 16), to_signed(16#767B#, 16),
     to_signed(16#768E#, 16), to_signed(16#76A1#, 16), to_signed(16#76B4#, 16), to_signed(16#76C7#, 16),
     to_signed(16#76D9#, 16), to_signed(16#76EC#, 16), to_signed(16#76FE#, 16), to_signed(16#7711#, 16),
     to_signed(16#7723#, 16), to_signed(16#7736#, 16), to_signed(16#7748#, 16), to_signed(16#775A#, 16),
     to_signed(16#776C#, 16), to_signed(16#777E#, 16), to_signed(16#7790#, 16), to_signed(16#77A2#, 16),
     to_signed(16#77B4#, 16), to_signed(16#77C6#, 16), to_signed(16#77D8#, 16), to_signed(16#77E9#, 16),
     to_signed(16#77FB#, 16), to_signed(16#780C#, 16), to_signed(16#781E#, 16), to_signed(16#782F#, 16),
     to_signed(16#7840#, 16), to_signed(16#7851#, 16), to_signed(16#7863#, 16), to_signed(16#7874#, 16),
     to_signed(16#7885#, 16), to_signed(16#7895#, 16), to_signed(16#78A6#, 16), to_signed(16#78B7#, 16),
     to_signed(16#78C8#, 16), to_signed(16#78D8#, 16), to_signed(16#78E9#, 16), to_signed(16#78F9#, 16),
     to_signed(16#790A#, 16), to_signed(16#791A#, 16), to_signed(16#792A#, 16), to_signed(16#793A#, 16),
     to_signed(16#794A#, 16), to_signed(16#795B#, 16), to_signed(16#796A#, 16), to_signed(16#797A#, 16),
     to_signed(16#798A#, 16), to_signed(16#799A#, 16), to_signed(16#79AA#, 16), to_signed(16#79B9#, 16),
     to_signed(16#79C9#, 16), to_signed(16#79D8#, 16), to_signed(16#79E7#, 16), to_signed(16#79F7#, 16),
     to_signed(16#7A06#, 16), to_signed(16#7A15#, 16), to_signed(16#7A24#, 16), to_signed(16#7A33#, 16),
     to_signed(16#7A42#, 16), to_signed(16#7A51#, 16), to_signed(16#7A60#, 16), to_signed(16#7A6E#, 16),
     to_signed(16#7A7D#, 16), to_signed(16#7A8C#, 16), to_signed(16#7A9A#, 16), to_signed(16#7AA8#, 16),
     to_signed(16#7AB7#, 16), to_signed(16#7AC5#, 16), to_signed(16#7AD3#, 16), to_signed(16#7AE1#, 16),
     to_signed(16#7AEF#, 16), to_signed(16#7AFD#, 16), to_signed(16#7B0B#, 16), to_signed(16#7B19#, 16),
     to_signed(16#7B27#, 16), to_signed(16#7B34#, 16), to_signed(16#7B42#, 16), to_signed(16#7B50#, 16),
     to_signed(16#7B5D#, 16), to_signed(16#7B6A#, 16), to_signed(16#7B78#, 16), to_signed(16#7B85#, 16),
     to_signed(16#7B92#, 16), to_signed(16#7B9F#, 16), to_signed(16#7BAC#, 16), to_signed(16#7BB9#, 16),
     to_signed(16#7BC6#, 16), to_signed(16#7BD3#, 16), to_signed(16#7BDF#, 16), to_signed(16#7BEC#, 16),
     to_signed(16#7BF9#, 16), to_signed(16#7C05#, 16), to_signed(16#7C11#, 16), to_signed(16#7C1E#, 16),
     to_signed(16#7C2A#, 16), to_signed(16#7C36#, 16), to_signed(16#7C42#, 16), to_signed(16#7C4E#, 16),
     to_signed(16#7C5A#, 16), to_signed(16#7C66#, 16), to_signed(16#7C72#, 16), to_signed(16#7C7E#, 16),
     to_signed(16#7C89#, 16), to_signed(16#7C95#, 16), to_signed(16#7CA0#, 16), to_signed(16#7CAC#, 16),
     to_signed(16#7CB7#, 16), to_signed(16#7CC2#, 16), to_signed(16#7CCE#, 16), to_signed(16#7CD9#, 16),
     to_signed(16#7CE4#, 16), to_signed(16#7CEF#, 16), to_signed(16#7CFA#, 16), to_signed(16#7D05#, 16),
     to_signed(16#7D0F#, 16), to_signed(16#7D1A#, 16), to_signed(16#7D25#, 16), to_signed(16#7D2F#, 16),
     to_signed(16#7D3A#, 16), to_signed(16#7D44#, 16), to_signed(16#7D4E#, 16), to_signed(16#7D58#, 16),
     to_signed(16#7D63#, 16), to_signed(16#7D6D#, 16), to_signed(16#7D77#, 16), to_signed(16#7D81#, 16),
     to_signed(16#7D8A#, 16), to_signed(16#7D94#, 16), to_signed(16#7D9E#, 16), to_signed(16#7DA7#, 16),
     to_signed(16#7DB1#, 16), to_signed(16#7DBA#, 16), to_signed(16#7DC4#, 16), to_signed(16#7DCD#, 16),
     to_signed(16#7DD6#, 16), to_signed(16#7DE0#, 16), to_signed(16#7DE9#, 16), to_signed(16#7DF2#, 16),
     to_signed(16#7DFB#, 16), to_signed(16#7E03#, 16), to_signed(16#7E0C#, 16), to_signed(16#7E15#, 16),
     to_signed(16#7E1E#, 16), to_signed(16#7E26#, 16), to_signed(16#7E2F#, 16), to_signed(16#7E37#, 16),
     to_signed(16#7E3F#, 16), to_signed(16#7E48#, 16), to_signed(16#7E50#, 16), to_signed(16#7E58#, 16),
     to_signed(16#7E60#, 16), to_signed(16#7E68#, 16), to_signed(16#7E70#, 16), to_signed(16#7E78#, 16),
     to_signed(16#7E7F#, 16), to_signed(16#7E87#, 16), to_signed(16#7E8E#, 16), to_signed(16#7E96#, 16),
     to_signed(16#7E9D#, 16), to_signed(16#7EA5#, 16), to_signed(16#7EAC#, 16), to_signed(16#7EB3#, 16),
     to_signed(16#7EBA#, 16), to_signed(16#7EC1#, 16), to_signed(16#7EC8#, 16), to_signed(16#7ECF#, 16),
     to_signed(16#7ED6#, 16), to_signed(16#7EDD#, 16), to_signed(16#7EE3#, 16), to_signed(16#7EEA#, 16),
     to_signed(16#7EF0#, 16), to_signed(16#7EF7#, 16), to_signed(16#7EFD#, 16), to_signed(16#7F03#, 16),
     to_signed(16#7F0A#, 16), to_signed(16#7F10#, 16), to_signed(16#7F16#, 16), to_signed(16#7F1C#, 16),
     to_signed(16#7F22#, 16), to_signed(16#7F27#, 16), to_signed(16#7F2D#, 16), to_signed(16#7F33#, 16),
     to_signed(16#7F38#, 16), to_signed(16#7F3E#, 16), to_signed(16#7F43#, 16), to_signed(16#7F49#, 16),
     to_signed(16#7F4E#, 16), to_signed(16#7F53#, 16), to_signed(16#7F58#, 16), to_signed(16#7F5D#, 16),
     to_signed(16#7F62#, 16), to_signed(16#7F67#, 16), to_signed(16#7F6C#, 16), to_signed(16#7F71#, 16),
     to_signed(16#7F75#, 16), to_signed(16#7F7A#, 16), to_signed(16#7F7E#, 16), to_signed(16#7F83#, 16),
     to_signed(16#7F87#, 16), to_signed(16#7F8B#, 16), to_signed(16#7F90#, 16), to_signed(16#7F94#, 16),
     to_signed(16#7F98#, 16), to_signed(16#7F9C#, 16), to_signed(16#7FA0#, 16), to_signed(16#7FA3#, 16),
     to_signed(16#7FA7#, 16), to_signed(16#7FAB#, 16), to_signed(16#7FAE#, 16), to_signed(16#7FB2#, 16),
     to_signed(16#7FB5#, 16), to_signed(16#7FB9#, 16), to_signed(16#7FBC#, 16), to_signed(16#7FBF#, 16),
     to_signed(16#7FC2#, 16), to_signed(16#7FC5#, 16), to_signed(16#7FC8#, 16), to_signed(16#7FCB#, 16),
     to_signed(16#7FCE#, 16), to_signed(16#7FD1#, 16), to_signed(16#7FD3#, 16), to_signed(16#7FD6#, 16),
     to_signed(16#7FD9#, 16), to_signed(16#7FDB#, 16), to_signed(16#7FDD#, 16), to_signed(16#7FE0#, 16),
     to_signed(16#7FE2#, 16), to_signed(16#7FE4#, 16), to_signed(16#7FE6#, 16), to_signed(16#7FE8#, 16),
     to_signed(16#7FEA#, 16), to_signed(16#7FEC#, 16), to_signed(16#7FED#, 16), to_signed(16#7FEF#, 16),
     to_signed(16#7FF1#, 16), to_signed(16#7FF2#, 16), to_signed(16#7FF4#, 16), to_signed(16#7FF5#, 16),
     to_signed(16#7FF6#, 16), to_signed(16#7FF7#, 16), to_signed(16#7FF8#, 16), to_signed(16#7FF9#, 16),
     to_signed(16#7FFA#, 16), to_signed(16#7FFB#, 16), to_signed(16#7FFC#, 16), to_signed(16#7FFD#, 16),
     to_signed(16#7FFE#, 16), to_signed(16#7FFE#, 16), to_signed(16#7FFF#, 16), to_signed(16#7FFF#, 16),
     to_signed(16#7FFF#, 16), to_signed(16#7FFF#, 16), to_signed(16#7FFF#, 16), to_signed(16#7FFF#, 16));  -- sfix16 [1024]
  CONSTANT Lookup_Table2_table_data       : vector_of_unsigned4(0 TO 511) := 
    (to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#2#, 4), to_unsigned(16#2#, 4),
     to_unsigned(16#3#, 4), to_unsigned(16#4#, 4), to_unsigned(16#5#, 4), to_unsigned(16#5#, 4),
     to_unsigned(16#6#, 4), to_unsigned(16#7#, 4), to_unsigned(16#8#, 4), to_unsigned(16#9#, 4),
     to_unsigned(16#9#, 4), to_unsigned(16#A#, 4), to_unsigned(16#B#, 4), to_unsigned(16#C#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#2#, 4), to_unsigned(16#2#, 4),
     to_unsigned(16#3#, 4), to_unsigned(16#4#, 4), to_unsigned(16#5#, 4), to_unsigned(16#5#, 4),
     to_unsigned(16#6#, 4), to_unsigned(16#7#, 4), to_unsigned(16#8#, 4), to_unsigned(16#9#, 4),
     to_unsigned(16#9#, 4), to_unsigned(16#A#, 4), to_unsigned(16#B#, 4), to_unsigned(16#C#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#2#, 4), to_unsigned(16#2#, 4),
     to_unsigned(16#3#, 4), to_unsigned(16#4#, 4), to_unsigned(16#5#, 4), to_unsigned(16#5#, 4),
     to_unsigned(16#6#, 4), to_unsigned(16#7#, 4), to_unsigned(16#8#, 4), to_unsigned(16#9#, 4),
     to_unsigned(16#9#, 4), to_unsigned(16#A#, 4), to_unsigned(16#B#, 4), to_unsigned(16#C#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#2#, 4), to_unsigned(16#2#, 4),
     to_unsigned(16#3#, 4), to_unsigned(16#4#, 4), to_unsigned(16#5#, 4), to_unsigned(16#5#, 4),
     to_unsigned(16#6#, 4), to_unsigned(16#7#, 4), to_unsigned(16#8#, 4), to_unsigned(16#9#, 4),
     to_unsigned(16#9#, 4), to_unsigned(16#A#, 4), to_unsigned(16#B#, 4), to_unsigned(16#C#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#2#, 4), to_unsigned(16#2#, 4),
     to_unsigned(16#3#, 4), to_unsigned(16#4#, 4), to_unsigned(16#5#, 4), to_unsigned(16#5#, 4),
     to_unsigned(16#6#, 4), to_unsigned(16#7#, 4), to_unsigned(16#8#, 4), to_unsigned(16#8#, 4),
     to_unsigned(16#9#, 4), to_unsigned(16#A#, 4), to_unsigned(16#B#, 4), to_unsigned(16#C#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#2#, 4), to_unsigned(16#2#, 4),
     to_unsigned(16#3#, 4), to_unsigned(16#4#, 4), to_unsigned(16#5#, 4), to_unsigned(16#5#, 4),
     to_unsigned(16#6#, 4), to_unsigned(16#7#, 4), to_unsigned(16#8#, 4), to_unsigned(16#8#, 4),
     to_unsigned(16#9#, 4), to_unsigned(16#A#, 4), to_unsigned(16#B#, 4), to_unsigned(16#B#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#2#, 4), to_unsigned(16#2#, 4),
     to_unsigned(16#3#, 4), to_unsigned(16#4#, 4), to_unsigned(16#5#, 4), to_unsigned(16#5#, 4),
     to_unsigned(16#6#, 4), to_unsigned(16#7#, 4), to_unsigned(16#8#, 4), to_unsigned(16#8#, 4),
     to_unsigned(16#9#, 4), to_unsigned(16#A#, 4), to_unsigned(16#B#, 4), to_unsigned(16#B#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#2#, 4),
     to_unsigned(16#3#, 4), to_unsigned(16#4#, 4), to_unsigned(16#4#, 4), to_unsigned(16#5#, 4),
     to_unsigned(16#6#, 4), to_unsigned(16#7#, 4), to_unsigned(16#7#, 4), to_unsigned(16#8#, 4),
     to_unsigned(16#9#, 4), to_unsigned(16#A#, 4), to_unsigned(16#A#, 4), to_unsigned(16#B#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#2#, 4),
     to_unsigned(16#3#, 4), to_unsigned(16#4#, 4), to_unsigned(16#4#, 4), to_unsigned(16#5#, 4),
     to_unsigned(16#6#, 4), to_unsigned(16#7#, 4), to_unsigned(16#7#, 4), to_unsigned(16#8#, 4),
     to_unsigned(16#9#, 4), to_unsigned(16#9#, 4), to_unsigned(16#A#, 4), to_unsigned(16#B#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#2#, 4),
     to_unsigned(16#3#, 4), to_unsigned(16#4#, 4), to_unsigned(16#4#, 4), to_unsigned(16#5#, 4),
     to_unsigned(16#6#, 4), to_unsigned(16#6#, 4), to_unsigned(16#7#, 4), to_unsigned(16#8#, 4),
     to_unsigned(16#9#, 4), to_unsigned(16#9#, 4), to_unsigned(16#A#, 4), to_unsigned(16#B#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#2#, 4),
     to_unsigned(16#3#, 4), to_unsigned(16#3#, 4), to_unsigned(16#4#, 4), to_unsigned(16#5#, 4),
     to_unsigned(16#6#, 4), to_unsigned(16#6#, 4), to_unsigned(16#7#, 4), to_unsigned(16#8#, 4),
     to_unsigned(16#8#, 4), to_unsigned(16#9#, 4), to_unsigned(16#A#, 4), to_unsigned(16#A#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#2#, 4),
     to_unsigned(16#3#, 4), to_unsigned(16#3#, 4), to_unsigned(16#4#, 4), to_unsigned(16#5#, 4),
     to_unsigned(16#5#, 4), to_unsigned(16#6#, 4), to_unsigned(16#7#, 4), to_unsigned(16#7#, 4),
     to_unsigned(16#8#, 4), to_unsigned(16#9#, 4), to_unsigned(16#9#, 4), to_unsigned(16#A#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#2#, 4),
     to_unsigned(16#3#, 4), to_unsigned(16#3#, 4), to_unsigned(16#4#, 4), to_unsigned(16#5#, 4),
     to_unsigned(16#5#, 4), to_unsigned(16#6#, 4), to_unsigned(16#7#, 4), to_unsigned(16#7#, 4),
     to_unsigned(16#8#, 4), to_unsigned(16#8#, 4), to_unsigned(16#9#, 4), to_unsigned(16#A#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#2#, 4),
     to_unsigned(16#3#, 4), to_unsigned(16#3#, 4), to_unsigned(16#4#, 4), to_unsigned(16#4#, 4),
     to_unsigned(16#5#, 4), to_unsigned(16#6#, 4), to_unsigned(16#6#, 4), to_unsigned(16#7#, 4),
     to_unsigned(16#8#, 4), to_unsigned(16#8#, 4), to_unsigned(16#9#, 4), to_unsigned(16#9#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#2#, 4),
     to_unsigned(16#2#, 4), to_unsigned(16#3#, 4), to_unsigned(16#4#, 4), to_unsigned(16#4#, 4),
     to_unsigned(16#5#, 4), to_unsigned(16#5#, 4), to_unsigned(16#6#, 4), to_unsigned(16#7#, 4),
     to_unsigned(16#7#, 4), to_unsigned(16#8#, 4), to_unsigned(16#8#, 4), to_unsigned(16#9#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#2#, 4),
     to_unsigned(16#2#, 4), to_unsigned(16#3#, 4), to_unsigned(16#3#, 4), to_unsigned(16#4#, 4),
     to_unsigned(16#5#, 4), to_unsigned(16#5#, 4), to_unsigned(16#6#, 4), to_unsigned(16#6#, 4),
     to_unsigned(16#7#, 4), to_unsigned(16#8#, 4), to_unsigned(16#8#, 4), to_unsigned(16#9#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#2#, 4),
     to_unsigned(16#2#, 4), to_unsigned(16#3#, 4), to_unsigned(16#3#, 4), to_unsigned(16#4#, 4),
     to_unsigned(16#4#, 4), to_unsigned(16#5#, 4), to_unsigned(16#6#, 4), to_unsigned(16#6#, 4),
     to_unsigned(16#7#, 4), to_unsigned(16#7#, 4), to_unsigned(16#8#, 4), to_unsigned(16#8#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#2#, 4),
     to_unsigned(16#2#, 4), to_unsigned(16#3#, 4), to_unsigned(16#3#, 4), to_unsigned(16#4#, 4),
     to_unsigned(16#4#, 4), to_unsigned(16#5#, 4), to_unsigned(16#5#, 4), to_unsigned(16#6#, 4),
     to_unsigned(16#6#, 4), to_unsigned(16#7#, 4), to_unsigned(16#7#, 4), to_unsigned(16#8#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4),
     to_unsigned(16#2#, 4), to_unsigned(16#2#, 4), to_unsigned(16#3#, 4), to_unsigned(16#3#, 4),
     to_unsigned(16#4#, 4), to_unsigned(16#4#, 4), to_unsigned(16#5#, 4), to_unsigned(16#5#, 4),
     to_unsigned(16#6#, 4), to_unsigned(16#6#, 4), to_unsigned(16#7#, 4), to_unsigned(16#7#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4),
     to_unsigned(16#2#, 4), to_unsigned(16#2#, 4), to_unsigned(16#3#, 4), to_unsigned(16#3#, 4),
     to_unsigned(16#4#, 4), to_unsigned(16#4#, 4), to_unsigned(16#5#, 4), to_unsigned(16#5#, 4),
     to_unsigned(16#6#, 4), to_unsigned(16#6#, 4), to_unsigned(16#7#, 4), to_unsigned(16#7#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4),
     to_unsigned(16#2#, 4), to_unsigned(16#2#, 4), to_unsigned(16#3#, 4), to_unsigned(16#3#, 4),
     to_unsigned(16#3#, 4), to_unsigned(16#4#, 4), to_unsigned(16#4#, 4), to_unsigned(16#5#, 4),
     to_unsigned(16#5#, 4), to_unsigned(16#6#, 4), to_unsigned(16#6#, 4), to_unsigned(16#7#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4),
     to_unsigned(16#2#, 4), to_unsigned(16#2#, 4), to_unsigned(16#2#, 4), to_unsigned(16#3#, 4),
     to_unsigned(16#3#, 4), to_unsigned(16#4#, 4), to_unsigned(16#4#, 4), to_unsigned(16#4#, 4),
     to_unsigned(16#5#, 4), to_unsigned(16#5#, 4), to_unsigned(16#6#, 4), to_unsigned(16#6#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4),
     to_unsigned(16#1#, 4), to_unsigned(16#2#, 4), to_unsigned(16#2#, 4), to_unsigned(16#3#, 4),
     to_unsigned(16#3#, 4), to_unsigned(16#3#, 4), to_unsigned(16#4#, 4), to_unsigned(16#4#, 4),
     to_unsigned(16#4#, 4), to_unsigned(16#5#, 4), to_unsigned(16#5#, 4), to_unsigned(16#6#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4),
     to_unsigned(16#1#, 4), to_unsigned(16#2#, 4), to_unsigned(16#2#, 4), to_unsigned(16#2#, 4),
     to_unsigned(16#3#, 4), to_unsigned(16#3#, 4), to_unsigned(16#3#, 4), to_unsigned(16#4#, 4),
     to_unsigned(16#4#, 4), to_unsigned(16#4#, 4), to_unsigned(16#5#, 4), to_unsigned(16#5#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4),
     to_unsigned(16#1#, 4), to_unsigned(16#2#, 4), to_unsigned(16#2#, 4), to_unsigned(16#2#, 4),
     to_unsigned(16#2#, 4), to_unsigned(16#3#, 4), to_unsigned(16#3#, 4), to_unsigned(16#3#, 4),
     to_unsigned(16#4#, 4), to_unsigned(16#4#, 4), to_unsigned(16#4#, 4), to_unsigned(16#5#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4),
     to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#2#, 4), to_unsigned(16#2#, 4),
     to_unsigned(16#2#, 4), to_unsigned(16#2#, 4), to_unsigned(16#3#, 4), to_unsigned(16#3#, 4),
     to_unsigned(16#3#, 4), to_unsigned(16#3#, 4), to_unsigned(16#4#, 4), to_unsigned(16#4#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#0#, 4), to_unsigned(16#0#, 4), to_unsigned(16#1#, 4),
     to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#2#, 4),
     to_unsigned(16#2#, 4), to_unsigned(16#2#, 4), to_unsigned(16#2#, 4), to_unsigned(16#3#, 4),
     to_unsigned(16#3#, 4), to_unsigned(16#3#, 4), to_unsigned(16#3#, 4), to_unsigned(16#3#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#0#, 4), to_unsigned(16#0#, 4), to_unsigned(16#1#, 4),
     to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4),
     to_unsigned(16#2#, 4), to_unsigned(16#2#, 4), to_unsigned(16#2#, 4), to_unsigned(16#2#, 4),
     to_unsigned(16#2#, 4), to_unsigned(16#2#, 4), to_unsigned(16#3#, 4), to_unsigned(16#3#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#0#, 4), to_unsigned(16#0#, 4), to_unsigned(16#0#, 4),
     to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4),
     to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#2#, 4), to_unsigned(16#2#, 4),
     to_unsigned(16#2#, 4), to_unsigned(16#2#, 4), to_unsigned(16#2#, 4), to_unsigned(16#2#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#0#, 4), to_unsigned(16#0#, 4), to_unsigned(16#0#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4),
     to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4),
     to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#2#, 4), to_unsigned(16#2#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#0#, 4), to_unsigned(16#0#, 4), to_unsigned(16#0#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#0#, 4), to_unsigned(16#0#, 4), to_unsigned(16#1#, 4),
     to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4),
     to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#0#, 4), to_unsigned(16#0#, 4), to_unsigned(16#0#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#0#, 4), to_unsigned(16#0#, 4), to_unsigned(16#0#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#0#, 4), to_unsigned(16#0#, 4), to_unsigned(16#0#, 4),
     to_unsigned(16#0#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4), to_unsigned(16#1#, 4));  -- ufix4 [512]

  -- Signals
  SIGNAL lutaddr_unsigned                 : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL lutaddrInReg                     : unsigned(13 DOWNTO 0);  -- ufix14
  SIGNAL lut1addr                         : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL Lookup_Table1_k                  : unsigned(9 DOWNTO 0);  -- ufix10
  SIGNAL lut1out                          : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL lut1out_reg                      : signed(15 DOWNTO 0) := to_signed(16#0000#, 16);  -- sfix16_En15
  SIGNAL lut2addrp1                       : unsigned(4 DOWNTO 0);  -- ufix5
  SIGNAL lut2addrp2                       : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL lut2addr                         : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL Lookup_Table2_k                  : unsigned(8 DOWNTO 0);  -- ufix9
  SIGNAL lut2out                          : unsigned(3 DOWNTO 0);  -- ufix4_En4
  SIGNAL lut2out_reg                      : unsigned(3 DOWNTO 0) := to_unsigned(16#0#, 4);  -- ufix4_En4
  SIGNAL lut1outreg                       : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL lut2outreg                       : unsigned(3 DOWNTO 0);  -- ufix4_En4
  SIGNAL lut2out_extend                   : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL lut2out_sf                       : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL adder_add_cast                   : signed(16 DOWNTO 0);  -- sfix17_En15
  SIGNAL adder_add_cast_1                 : signed(16 DOWNTO 0);  -- sfix17_En15
  SIGNAL adder_add_temp                   : signed(16 DOWNTO 0);  -- sfix17_En15
  SIGNAL addlutouts                       : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL lutoutput_tmp                    : signed(15 DOWNTO 0);  -- sfix16_En15

BEGIN
  lutaddr_unsigned <= unsigned(lutaddr);

  -- Look up table address input register
  LUTaddrRegister_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        lutaddrInReg <= to_unsigned(16#0000#, 14);
      ELSIF enb = '1' THEN
        lutaddrInReg <= lutaddr_unsigned;
      END IF;
    END IF;
  END PROCESS LUTaddrRegister_process;


  -- Lookup table 1 address
  lut1addr <= lutaddrInReg(13 DOWNTO 4);

  -- Quarter sine wave table-Part1
  
  Lookup_Table1_k <= to_unsigned(16#000#, 10) WHEN lut1addr = to_unsigned(16#000#, 10) ELSE
      to_unsigned(16#3FF#, 10) WHEN lut1addr = to_unsigned(16#3FF#, 10) ELSE
      lut1addr;
  lut1out <= Lookup_Table1_table_data(to_integer(Lookup_Table1_k));

  -- Lookup table1 output register
  LUT1outRegister_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        lut1out_reg <= lut1out;
      END IF;
    END IF;
  END PROCESS LUT1outRegister_process;


  lut2addrp1 <= lutaddrInReg(13 DOWNTO 9);

  lut2addrp2 <= lutaddrInReg(3 DOWNTO 0);

  -- Lookup table 2 address
  lut2addr <= lut2addrp1 & lut2addrp2;

  -- Quarter Sine Wave Table-Part2
  
  Lookup_Table2_k <= to_unsigned(16#000#, 9) WHEN lut2addr = to_unsigned(16#000#, 9) ELSE
      to_unsigned(16#1FF#, 9) WHEN lut2addr = to_unsigned(16#1FF#, 9) ELSE
      lut2addr;
  lut2out <= Lookup_Table2_table_data(to_integer(Lookup_Table2_k));

  -- Lookup table2 output register
  LUT2outRegister_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        lut2out_reg <= lut2out;
      END IF;
    END IF;
  END PROCESS LUT2outRegister_process;


  LUToutRegister_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        lut1outreg <= to_signed(16#0000#, 16);
      ELSIF enb = '1' THEN
        lut1outreg <= lut1out_reg;
      END IF;
    END IF;
  END PROCESS LUToutRegister_process;


  LUToutRegister_1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        lut2outreg <= to_unsigned(16#0#, 4);
      ELSIF enb = '1' THEN
        lut2outreg <= lut2out_reg;
      END IF;
    END IF;
  END PROCESS LUToutRegister_1_process;


  lut2out_extend <= signed(resize(lut2outreg & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 16));

  -- Shift look up table 2 outputs
  lut2out_sf <= lut2out_extend srl 9;

  -- Compute look up table output
  adder_add_cast <= resize(lut1outreg, 17);
  adder_add_cast_1 <= resize(lut2out_sf, 17);
  adder_add_temp <= adder_add_cast + adder_add_cast_1;
  
  addlutouts <= X"7FFF" WHEN (adder_add_temp(16) = '0') AND (adder_add_temp(15) /= '0') ELSE
      X"8000" WHEN (adder_add_temp(16) = '1') AND (adder_add_temp(15) /= '1') ELSE
      adder_add_temp(15 DOWNTO 0);

  -- Look up table output register
  LUToutRegister_2_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        lutoutput_tmp <= to_signed(16#0000#, 16);
      ELSIF enb = '1' THEN
        lutoutput_tmp <= addlutouts;
      END IF;
    END IF;
  END PROCESS LUToutRegister_2_process;


  lutoutput <= std_logic_vector(lutoutput_tmp);

END rtl;

