// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\pentek_dac_ip_test\DAC_NCO_4_ip_dut.v
// Created: 2020-09-15 17:49:48
// 
// Generated by MATLAB 9.7 and HDL Coder 3.15
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: DAC_NCO_4_ip_dut
// Source Path: DAC_NCO_4_ip/DAC_NCO_4_ip_dut
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module DAC_NCO_4_ip_dut
          (clk,
           reset,
           dut_enable,
           s_axis_data,
           s_axis_valid,
           m_axis_ready,
           nco_phase_inc_reg,
           src_sel_reg,
           ce_out,
           m_axis_data,
           m_axis_valid,
           s_axis_ready);


  input   clk;
  input   reset;
  input   dut_enable;  // ufix1
  input   [127:0] s_axis_data;  // ufix128
  input   s_axis_valid;  // ufix1
  input   m_axis_ready;  // ufix1
  input   [31:0] nco_phase_inc_reg;  // ufix32
  input   src_sel_reg;  // ufix1
  output  ce_out;  // ufix1
  output  [127:0] m_axis_data;  // ufix128
  output  m_axis_valid;  // ufix1
  output  s_axis_ready;  // ufix1


  wire enb;
  wire ce_out_sig;  // ufix1
  wire [127:0] m_axis_data_sig;  // ufix128
  wire m_axis_valid_sig;  // ufix1
  wire s_axis_ready_sig;  // ufix1


  assign enb = dut_enable;

  DAC_NCO_4_ip_src_DAC_NCO_4xSampling_IQ u_DAC_NCO_4_ip_src_DAC_NCO_4xSampling_IQ (.clk(clk),
                                                                                   .clk_enable(enb),
                                                                                   .reset(reset),
                                                                                   .s_axis_data(s_axis_data),  // ufix128
                                                                                   .s_axis_valid(s_axis_valid),  // ufix1
                                                                                   .m_axis_ready(m_axis_ready),  // ufix1
                                                                                   .nco_phase_inc_reg(nco_phase_inc_reg),  // ufix32
                                                                                   .src_sel_reg(src_sel_reg),  // ufix1
                                                                                   .ce_out(ce_out_sig),  // ufix1
                                                                                   .m_axis_data(m_axis_data_sig),  // ufix128
                                                                                   .m_axis_valid(m_axis_valid_sig),  // ufix1
                                                                                   .s_axis_ready(s_axis_ready_sig)  // ufix1
                                                                                   );

  assign ce_out = ce_out_sig;

  assign m_axis_data = m_axis_data_sig;

  assign m_axis_valid = m_axis_valid_sig;

  assign s_axis_ready = s_axis_ready_sig;

endmodule  // DAC_NCO_4_ip_dut

