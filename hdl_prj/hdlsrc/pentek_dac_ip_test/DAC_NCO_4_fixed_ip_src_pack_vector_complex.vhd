-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\pentek_dac_ip_test\DAC_NCO_4_fixed_ip_src_pack_vector_complex.vhd
-- Created: 2020-09-08 13:47:15
-- 
-- Generated by MATLAB 9.7 and HDL Coder 3.15
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: DAC_NCO_4_fixed_ip_src_pack_vector_complex
-- Source Path: pentek_dac_ip_test/DAC_NCO_4xSampling_IQ/Pack Complex Vector/pack_vector_complex
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.DAC_NCO_4_fixed_ip_src_DAC_NCO_4xSampling_IQ_pkg.ALL;

ENTITY DAC_NCO_4_fixed_ip_src_pack_vector_complex IS
  PORT( u_re                              :   IN    vector_of_std_logic_vector16(0 TO 3);  -- sfix16_En15 [4]
        u_im                              :   IN    vector_of_std_logic_vector16(0 TO 3);  -- sfix16_En15 [4]
        y                                 :   OUT   std_logic_vector(127 DOWNTO 0)  -- ufix128
        );
END DAC_NCO_4_fixed_ip_src_pack_vector_complex;


ARCHITECTURE rtl OF DAC_NCO_4_fixed_ip_src_pack_vector_complex IS

  -- Signals
  SIGNAL u_re_signed                      : vector_of_signed16(0 TO 3);  -- sfix16_En15 [4]
  SIGNAL u_im_signed                      : vector_of_signed16(0 TO 3);  -- sfix16_En15 [4]
  SIGNAL y_tmp                            : unsigned(127 DOWNTO 0);  -- ufix128

BEGIN
  outputgen1: FOR k IN 0 TO 3 GENERATE
    u_re_signed(k) <= signed(u_re(k));
  END GENERATE;

  outputgen: FOR k IN 0 TO 3 GENERATE
    u_im_signed(k) <= signed(u_im(k));
  END GENERATE;

  pack_vector_complex_output : PROCESS (u_im_signed, u_re_signed)
    VARIABLE temp : vector_of_signed16(0 TO 7);
  BEGIN
    --MATLAB Function 'DAC_NCO_4xSampling_IQ/Pack Complex Vector/pack_vector_complex'
    -- Interleave real/imag
    temp(7) := u_re_signed(0);
    temp(6) := u_im_signed(0);
    temp(5) := u_re_signed(1);
    temp(4) := u_im_signed(1);
    temp(3) := u_re_signed(2);
    temp(2) := u_im_signed(2);
    temp(1) := u_re_signed(3);
    temp(0) := u_im_signed(3);
    y_tmp <= unsigned(temp(0)) & unsigned(temp(1)) & unsigned(temp(2)) & unsigned(temp(3)) & unsigned(temp(4)) & unsigned(temp(5)) & unsigned(temp(6)) & unsigned(temp(7));
  END PROCESS pack_vector_complex_output;


  y <= std_logic_vector(y_tmp);

END rtl;

