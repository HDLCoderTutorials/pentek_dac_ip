// -------------------------------------------------------------
// 
// File Name: hdl_prj\hdlsrc\pentek_dac_ip_test\DAC_NCO_4_ip_axi4_stream_master.v
// Created: 2020-09-15 17:49:48
// 
// Generated by MATLAB 9.7 and HDL Coder 3.15
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: DAC_NCO_4_ip_axi4_stream_master
// Source Path: DAC_NCO_4_ip/DAC_NCO_4_ip_axi4_stream_master
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module DAC_NCO_4_ip_axi4_stream_master
          (clk,
           reset,
           enb,
           AXI4_Stream_Master_TREADY,
           user_data,
           user_valid,
           write_packet_size_axi4_stream_master,
           AXI4_Stream_Master_TDATA,
           AXI4_Stream_Master_TVALID,
           AXI4_Stream_Master_TLAST,
           user_ready);


  input   clk;
  input   reset;
  input   enb;
  input   AXI4_Stream_Master_TREADY;  // ufix1
  input   [127:0] user_data;  // ufix128
  input   user_valid;  // ufix1
  input   [31:0] write_packet_size_axi4_stream_master;  // ufix32
  output  [127:0] AXI4_Stream_Master_TDATA;  // ufix128
  output  AXI4_Stream_Master_TVALID;  // ufix1
  output  AXI4_Stream_Master_TLAST;  // ufix1
  output  user_ready;  // ufix1


  wire fifo_empty_data;  // ufix1
  wire fifo_afull_data;  // ufix1
  wire [31:0] const_1;  // ufix32
  wire [31:0] tlast_size_value;  // ufix32
  wire auto_tlast;  // ufix1
  reg [31:0] tlast_counter_out;  // ufix32
  wire relop_relop1;
  wire internal_ready;  // ufix1


  DAC_NCO_4_ip_fifo_data_OUT u_DAC_NCO_4_ip_fifo_data_OUT_inst (.clk(clk),
                                                                .reset(reset),
                                                                .enb(enb),
                                                                .In(user_data),  // ufix128
                                                                .Push(user_valid),  // ufix1
                                                                .Pop(AXI4_Stream_Master_TREADY),  // ufix1
                                                                .Out(AXI4_Stream_Master_TDATA),  // ufix128
                                                                .Empty(fifo_empty_data),  // ufix1
                                                                .AFull(fifo_afull_data)  // ufix1
                                                                );

  assign AXI4_Stream_Master_TVALID =  ~ fifo_empty_data;



  assign const_1 = 32'b00000000000000000000000000000001;



  assign tlast_size_value = write_packet_size_axi4_stream_master - const_1;



  // Free running, Unsigned Counter
  //  initial value   = 0
  //  step value      = 1
  always @(posedge clk)
    begin : tlast_counter_process
      if (reset == 1'b1) begin
        tlast_counter_out <= 32'b00000000000000000000000000000000;
      end
      else begin
        if (enb) begin
          if (auto_tlast == 1'b1) begin
            tlast_counter_out <= 32'b00000000000000000000000000000000;
          end
          else if (user_valid == 1'b1) begin
            tlast_counter_out <= tlast_counter_out + 32'b00000000000000000000000000000001;
          end
        end
      end
    end



  assign relop_relop1 = tlast_counter_out == tlast_size_value;



  assign auto_tlast = user_valid & relop_relop1;



  DAC_NCO_4_ip_fifo_TLAST_OUT u_DAC_NCO_4_ip_fifo_TLAST_OUT_inst (.clk(clk),
                                                                  .reset(reset),
                                                                  .enb(enb),
                                                                  .In(auto_tlast),  // ufix1
                                                                  .Push(user_valid),  // ufix1
                                                                  .Pop(AXI4_Stream_Master_TREADY),  // ufix1
                                                                  .Out(AXI4_Stream_Master_TLAST)  // ufix1
                                                                  );

  assign internal_ready =  ~ fifo_afull_data;



  assign user_ready = internal_ready;

endmodule  // DAC_NCO_4_ip_axi4_stream_master

